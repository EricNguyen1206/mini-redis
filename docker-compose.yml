# Mini-Redis Microservices
services:
  # ============================================================================
  # CORE SERVICE - Fully Standalone Redis-Compatible Server
  # ============================================================================
  # This service runs independently and provides complete Redis functionality.
  # No dependencies on other services. Can be used as a drop-in Redis replacement.

  mini-redis-core:
    build:
      context: ./services/mini-redis-core
      dockerfile: Dockerfile
    container_name: mini-redis-core
    ports:
      - "6380:6380"  # Redis protocol port - connect with any Redis client
    environment:
      - NODE_ENV=production
      - REDIS_PORT=6380
    networks:
      - mini-redis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const net = require('net'); const client = net.connect(6380, 'localhost', () => { client.write('PING\\n'); client.on('data', () => { client.end(); process.exit(0); }); }); client.on('error', () => process.exit(1));"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ============================================================================
  # OFFICIAL REDISINSIGHT SERVICE - Redis Labs Web Monitoring Tool
  # ============================================================================
  # Official Redis monitoring and management tool with web interface
  # Provides comprehensive Redis database management and monitoring capabilities

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    platform: linux/arm64  # Native ARM64 support available
    ports:
      - "8080:5540"  # RedisInsight web interface port
    volumes:
      - redisinsight-data:/db
    networks:
      - mini-redis-network
    restart: unless-stopped
    profiles:
      - insight  # Optional service - only starts when explicitly requested

  # ============================================================================
  # OFFICIAL MEMTIER BENCHMARK SERVICE - Redis Labs Benchmarking Tool
  # ============================================================================
  # Official Redis benchmarking tool for performance testing
  # Provides comprehensive Redis performance testing capabilities
  # Note: Uses linux/amd64 emulation on ARM64 systems (Apple Silicon)

  memtier-benchmark:
    image: redislabs/memtier_benchmark:latest
    container_name: memtier-benchmark
    platform: linux/amd64  # Required: ARM64 not supported, uses emulation
    networks:
      - mini-redis-network
    profiles:
      - benchmark
    command: [
      "--server=mini-redis-core",
      "--port=6380",
      "--protocol=redis",
      "--clients=10",
      "--threads=2",
      "--requests=1000",
      "--data-size=32",
      "--key-pattern=R:R",
      "--ratio=1:1",
      "--print-percentiles=50,90,95,99"
    ]

  # Stress test variant with higher load
  memtier-benchmark-stress:
    image: redislabs/memtier_benchmark:latest
    container_name: memtier-benchmark-stress
    platform: linux/amd64  # Required: ARM64 not supported, uses emulation
    networks:
      - mini-redis-network
    profiles:
      - stress
    command: [
      "--server=mini-redis-core",
      "--port=6380",
      "--protocol=redis",
      "--clients=50",
      "--threads=4",
      "--requests=10000",
      "--data-size=1024",
      "--key-pattern=R:R",
      "--ratio=1:1",
      "--print-percentiles=50,90,95,99,99.9"
    ]

  # Pipeline test variant
  memtier-benchmark-pipeline:
    image: redislabs/memtier_benchmark:latest
    container_name: memtier-benchmark-pipeline
    platform: linux/amd64  # Required: ARM64 not supported, uses emulation
    networks:
      - mini-redis-network
    profiles:
      - pipeline
    command: [
      "--server=mini-redis-core",
      "--port=6380",
      "--protocol=redis",
      "--clients=20",
      "--threads=2",
      "--requests=5000",
      "--data-size=64",
      "--pipeline=10",
      "--key-pattern=R:R",
      "--ratio=1:1",
      "--print-percentiles=50,90,95,99"
    ]

  # Redis CLI for manual testing
  redis-cli:
    image: redis:7-alpine
    container_name: redis-cli-client
    platform: linux/arm64  # Native ARM64 support available
    depends_on:
      - mini-redis-core
    networks:
      - mini-redis-network
    profiles:
      - cli
    stdin_open: true
    tty: true
    command: redis-cli -h mini-redis-core -p 6380

networks:
  mini-redis-network:
    driver: bridge

volumes:
  mini-redis-data:
    driver: local
  redisinsight-data:
    driver: local
